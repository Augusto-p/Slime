{
    ".pug-lintrc": "pug",
    ".pug-lintrc.js": "pug",
    ".pug-lintrc.json": "pug",
    "justfile": "just",
    ".justfile": "just",
    ".jscsrc": "json",
    ".jshintrc": "json",
    "composer.lock": "json",
    ".jsbeautifyrc": "json",
    ".esformatter": "json",
    "cdp.pid": "json",
    ".lintstagedrc": "json",
    ".whitesource": "json",
    "playwright.config.js": "playwright",
    "playwright.config.mjs": "playwright",
    "playwright.config.ts": "playwright",
    "playwright.config.base.js": "playwright",
    "playwright.config.base.mjs": "playwright",
    "playwright.config.base.ts": "playwright",
    "playwright-ct.config.js": "playwright",
    "playwright-ct.config.mjs": "playwright",
    "playwright-ct.config.ts": "playwright",
    ".htaccess": "xml",
    ".release-it.json": "rocket",
    ".release-it.ts": "rocket",
    ".release-it.js": "rocket",
    ".release-it.cjs": "rocket",
    ".release-it.yaml": "rocket",
    ".release-it.yml": "rocket",
    ".release-it.toml": "rocket",
    "release.toml": "rocket",
    "release-plz.toml": "rocket",
    ".release-plz.toml": "rocket",
    "router.js": "routing",
    "router.jsx": "routing",
    "router.ts": "routing",
    "router.tsx": "routing",
    "route.js": "routing",
    "route.jsx": "routing",
    "route.ts": "routing",
    "route.tsx": "routing",
    "routes.js": "routing",
    "routes.jsx": "routing",
    "routes.ts": "routing",
    "routes.tsx": "routing",
    "action.js": "redux-action",
    "actions.js": "redux-action",
    "action.ts": "redux-action",
    "actions.ts": "redux-action",
    "reducer.js": "redux-reducer",
    "reducers.js": "redux-reducer",
    "reducer.ts": "redux-reducer",
    "reducers.ts": "redux-reducer",
    "selector.js": "redux-selector",
    "selectors.js": "redux-selector",
    "selector.ts": "redux-selector",
    "selectors.ts": "redux-selector",
    "store.js": "vuex-store",
    "store.ts": "vuex-store",
    ".jshintignore": "settings",
    ".buildignore": "settings",
    ".mrconfig": "settings",
    ".yardopts": "settings",
    "manifest.mf": "settings",
    ".clang-format": "settings",
    ".clang-format-ignore": "settings",
    ".clang-tidy": "settings",
    ".conf": "settings",
    "compile_flags.txt": "settings",
    "astro.config.js": "astro-config",
    "astro.config.mjs": "astro-config",
    "astro.config.cjs": "astro-config",
    "astro.config.ts": "astro-config",
    "astro.config.cts": "astro-config",
    "astro.config.mts": "astro-config",
    "go.mod": "go-mod",
    "go.sum": "go-mod",
    "go.work": "go-mod",
    "go.work.sum": "go-mod",
    "requirements.txt": "python-misc",
    "pipfile": "python-misc",
    ".python-version": "python-misc",
    "manifest.in": "python-misc",
    "pylintrc": "python-misc",
    ".pylintrc": "python-misc",
    "pyproject.toml": "python-misc",
    "py.typed": "python-misc",
    ".coveragerc": "python-misc",
    ".coverage": "python-misc",
    ".scrapy": "python-misc",
    "celerybeat-schedule": "python-misc",
    "celerybeat.pid": "python-misc",
    "ruff.toml": "ruff",
    ".ruff.toml": "ruff",
    "uv.toml": "uv",
    ".uv.toml": "uv",
    "sconstruct": "scons",
    "sconscript": "scons",
    "scsub": "scons",
    "commit-msg": "console",
    "pre-commit": "console",
    "pre-push": "console",
    "post-merge": "console",
    "gradle.properties": "gradle",
    "gradlew": "gradle",
    "gradle-wrapper.properties": "gradle",
    "copying": "certificate",
    "copying.md": "certificate",
    "copying.rst": "certificate",
    "copying.txt": "certificate",
    "copyright": "certificate",
    "copyright.md": "certificate",
    "copyright.rst": "certificate",
    "copyright.txt": "certificate",
    "license": "certificate",
    "license-agpl": "certificate",
    "license-apache": "certificate",
    "license-bsd": "certificate",
    "license-mit": "certificate",
    "license-gpl": "certificate",
    "license-lgpl": "certificate",
    "license.md": "certificate",
    "license.rst": "certificate",
    "license.txt": "certificate",
    "licence": "certificate",
    "licence-agpl": "certificate",
    "licence-apache": "certificate",
    "licence-bsd": "certificate",
    "licence-mit": "certificate",
    "licence-gpl": "certificate",
    "licence-lgpl": "certificate",
    "licence.md": "certificate",
    "licence.rst": "certificate",
    "licence.txt": "certificate",
    "unlicense": "certificate",
    "unlicense.txt": "certificate",
    ".htpasswd": "key",
    "sha256sums": "key",
    ".secrets": "key",
    "keystatic.config.tsx": "keystatic",
    "keystatic.config.ts": "keystatic",
    "keystatic.config.jsx": "keystatic",
    "keystatic.config.js": "keystatic",
    ".ruby-version": "ruby",
    "gemfile": "gemfile",
    ".rubocop.yml": "rubocop",
    ".rubocop-todo.yml": "rubocop",
    ".rubocop_todo.yml": "rubocop",
    ".rspec": "rspec",
    "dockerfile": "docker",
    "dockerfile.prod": "docker",
    "dockerfile.production": "docker",
    "dockerfile.alpha": "docker",
    "dockerfile.beta": "docker",
    "dockerfile.stage": "docker",
    "dockerfile.staging": "docker",
    "dockerfile.dev": "docker",
    "dockerfile.development": "docker",
    "dockerfile.local": "docker",
    "dockerfile.test": "docker",
    "dockerfile.testing": "docker",
    "dockerfile.ci": "docker",
    "dockerfile.web": "docker",
    "dockerfile.windows": "docker",
    "dockerfile.worker": "docker",
    "docker-compose.yml": "docker",
    "docker-compose.override.yml": "docker",
    "docker-compose.prod.yml": "docker",
    "docker-compose.production.yml": "docker",
    "docker-compose.alpha.yml": "docker",
    "docker-compose.beta.yml": "docker",
    "docker-compose.stage.yml": "docker",
    "docker-compose.staging.yml": "docker",
    "docker-compose.dev.yml": "docker",
    "docker-compose.development.yml": "docker",
    "docker-compose.local.yml": "docker",
    "docker-compose.test.yml": "docker",
    "docker-compose.testing.yml": "docker",
    "docker-compose.ci.yml": "docker",
    "docker-compose.web.yml": "docker",
    "docker-compose.worker.yml": "docker",
    "docker-compose.yaml": "docker",
    "docker-compose.override.yaml": "docker",
    "docker-compose.prod.yaml": "docker",
    "docker-compose.production.yaml": "docker",
    "docker-compose.alpha.yaml": "docker",
    "docker-compose.beta.yaml": "docker",
    "docker-compose.stage.yaml": "docker",
    "docker-compose.staging.yaml": "docker",
    "docker-compose.dev.yaml": "docker",
    "docker-compose.development.yaml": "docker",
    "docker-compose.local.yaml": "docker",
    "docker-compose.test.yaml": "docker",
    "docker-compose.testing.yaml": "docker",
    "docker-compose.ci.yaml": "docker",
    "docker-compose.web.yaml": "docker",
    "docker-compose.worker.yaml": "docker",
    "containerfile": "docker",
    "containerfile.prod": "docker",
    "containerfile.production": "docker",
    "containerfile.alpha": "docker",
    "containerfile.beta": "docker",
    "containerfile.stage": "docker",
    "containerfile.staging": "docker",
    "containerfile.dev": "docker",
    "containerfile.development": "docker",
    "containerfile.local": "docker",
    "containerfile.test": "docker",
    "containerfile.testing": "docker",
    "containerfile.ci": "docker",
    "containerfile.web": "docker",
    "containerfile.worker": "docker",
    "compose.yaml": "docker",
    "compose.override.yaml": "docker",
    "compose.prod.yaml": "docker",
    "compose.production.yaml": "docker",
    "compose.alpha.yaml": "docker",
    "compose.beta.yaml": "docker",
    "compose.stage.yaml": "docker",
    "compose.staging.yaml": "docker",
    "compose.dev.yaml": "docker",
    "compose.development.yaml": "docker",
    "compose.local.yaml": "docker",
    "compose.test.yaml": "docker",
    "compose.testing.yaml": "docker",
    "compose.ci.yaml": "docker",
    "compose.web.yaml": "docker",
    "compose.worker.yaml": "docker",
    "compose.yml": "docker",
    "compose.override.yml": "docker",
    "compose.prod.yml": "docker",
    "compose.production.yml": "docker",
    "compose.alpha.yml": "docker",
    "compose.beta.yml": "docker",
    "compose.stage.yml": "docker",
    "compose.staging.yml": "docker",
    "compose.dev.yml": "docker",
    "compose.development.yml": "docker",
    "compose.local.yml": "docker",
    "compose.test.yml": "docker",
    "compose.testing.yml": "docker",
    "compose.ci.yml": "docker",
    "compose.web.yml": "docker",
    "compose.worker.yml": "docker",
    ".mailmap": "email",
    ".graphqlconfig": "graphql",
    ".git": "git",
    ".gitignore": "git",
    ".gitmessage": "git",
    ".gitignore-global": "git",
    ".gitignore_global": "git",
    ".gitattributes": "git",
    ".gitattributes-global": "git",
    ".gitattributes_global": "git",
    ".gitconfig": "git",
    ".gitmodules": "git",
    ".gitkeep": "git",
    ".keep": "git",
    ".gitpreserve": "git",
    ".gitinclude": "git",
    ".git-blame-ignore": "git",
    ".git-blame-ignore-revs": "git",
    ".git-for-windows-updater": "git",
    "git-history": "git",
    ".luacheckrc": "lua",
    ".Rhistory": "r",
    ".pubignore": "dart",
    "cmakelists.txt": "cmake",
    "cmakecache.txt": "cmake",
    "semgrep.yml": "semgrep",
    ".semgrepignore": "semgrep",
    "vue.config.js": "vue-config",
    "vue.config.ts": "vue-config",
    "vetur.config.js": "vue-config",
    "vetur.config.ts": "vue-config",
    "volar.config.js": "vue-config",
    "nuxt.config.js": "nuxt",
    "nuxt.config.ts": "nuxt",
    ".nuxtignore": "nuxt",
    ".nuxtrc": "nuxt",
    "harmonix.config.js": "harmonix",
    "harmonix.config.ts": "harmonix",
    "security.md": "lock",
    "security.txt": "lock",
    "security": "lock",
    "angular-cli.json": "angular",
    ".angular-cli.json": "angular",
    "angular.json": "angular",
    "ng-package.json": "angular",
    ".mjmlconfig": "mjml",
    "vercel.json": "vercel",
    ".vercelignore": "vercel",
    "now.json": "vercel",
    ".nowignore": "vercel",
    "liara.json": "liara",
    ".liaraignore": "liara",
    "verdaccio.yml": "verdaccio",
    "payload.config.js": "payload",
    "payload.config.mjs": "payload",
    "payload.config.ts": "payload",
    "payload.config.mts": "payload",
    "next.config.js": "next",
    "next.config.mjs": "next",
    "next.config.ts": "next",
    "next.config.mts": "next",
    ".remarkrc": "remark",
    ".remarkrc.cjs": "remark",
    ".remarkrc.js": "remark",
    ".remarkrc.json": "remark",
    ".remarkrc.mjs": "remark",
    ".remarkrc.yaml": "remark",
    ".remarkrc.yml": "remark",
    ".remarkignore": "remark",
    "remix.config.js": "remix",
    "remix.config.ts": "remix",
    "artisan": "laravel",
    ".vfl": "vfl",
    ".kl": "kl",
    "todo.md": "todo",
    "todos.md": "todo",
    "cabal.project": "cabal",
    "cabal.project.freeze": "cabal",
    "cabal.project.local": "cabal",
    "CNAME": "http",
    "project.graphcool": "graphcool",
    "webpack.config.coffee": "webpack",
    "ionic.config.json": "ionic",
    ".io-config.json": "ionic",
    "gulpfile.js": "gulp",
    "gulpfile.mjs": "gulp",
    "gulpfile.ts": "gulp",
    "gulpfile.cts": "gulp",
    "gulpfile.mts": "gulp",
    "gulpfile.babel.js": "gulp",
    "package.json": "nodejs",
    "package-lock.json": "nodejs",
    ".nvmrc": "nodejs",
    ".esmrc": "nodejs",
    ".node-version": "nodejs",
    ".npmignore": "npm",
    ".npmrc": "npm",
    ".yarnrc": "yarn",
    "yarn.lock": "yarn",
    ".yarnclean": "yarn",
    ".yarn-integrity": "yarn",
    "yarn-error.log": "yarn",
    ".yarnrc.yml": "yarn",
    ".yarnrc.yaml": "yarn",
    "androidmanifest.xml": "android",
    ".env.defaults": "tune",
    ".env.example": "tune",
    ".env.sample": "tune",
    ".env.template": "tune",
    ".env.schema": "tune",
    ".env.local": "tune",
    ".env.dev": "tune",
    ".env.development": "tune",
    ".env.alpha": "tune",
    ".env.e2e": "tune",
    ".env.qa": "tune",
    ".env.dist": "tune",
    ".env.prod": "tune",
    ".env.production": "tune",
    ".env.stg": "tune",
    ".env.stage": "tune",
    ".env.staging": "tune",
    ".env.preview": "tune",
    ".env.test": "tune",
    ".env.testing": "tune",
    ".env.dev.local": "tune",
    ".env.development.local": "tune",
    ".env.qa.local": "tune",
    ".env.prod.local": "tune",
    ".env.production.local": "tune",
    ".env.stg.local": "tune",
    ".env.staging.local": "tune",
    ".env.test.local": "tune",
    ".env.uat": "tune",
    ".vars": "tune",
    ".dev.vars": "tune",
    "turbo.json": "turborepo",
    "turbo.jsonc": "turborepo",
    "babel-transform.js": "babel",
    "blitz.config.js": "blitz",
    "blitz.config.ts": "blitz",
    ".blitz.config.compiled.js": "blitz",
    "contributing.md": "contributing",
    "contributing.rst": "contributing",
    "contributing.txt": "contributing",
    "contributing": "contributing",
    "readme.md": "readme",
    "readme.rst": "readme",
    "readme.txt": "readme",
    "readme": "readme",
    "changelog": "changelog",
    "changelog.md": "changelog",
    "changelog.rst": "changelog",
    "changelog.txt": "changelog",
    "changes": "changelog",
    "changes.md": "changelog",
    "changes.rst": "changelog",
    "changes.txt": "changelog",
    "architecture.md": "architecture",
    "architecture.rst": "architecture",
    "architecture.txt": "architecture",
    "architecture": "architecture",
    "credits.md": "credits",
    "credits.rst": "credits",
    "credits.txt": "credits",
    "credits": "credits",
    "authors.md": "authors",
    "authors.rst": "authors",
    "authors.txt": "authors",
    "authors": "authors",
    "contributors.md": "authors",
    "contributors.rst": "authors",
    "contributors.txt": "authors",
    "contributors": "authors",
    ".flowconfig": "flow",
    "favicon.ico": "favicon",
    "karma.conf.js": "karma",
    "karma.conf.ts": "karma",
    "karma.conf.coffee": "karma",
    "karma.config.js": "karma",
    "karma.config.ts": "karma",
    "karma-main.js": "karma",
    "karma-main.ts": "karma",
    ".bithoundrc": "bithound",
    "svgo.config.js": "svgo",
    "svgo.config.cjs": "svgo",
    "svgo.config.mjs": "svgo",
    ".appveyor.yml": "appveyor",
    "appveyor.yml": "appveyor",
    ".travis.yml": "travis",
    ".codecov.yml": "codecov",
    "codecov.yml": "codecov",
    ".codecov.yaml": "codecov",
    "codecov.yaml": "codecov",
    "sonar-project.properties": "sonarcloud",
    ".sonarcloud.properties": "sonarcloud",
    "sonarcloud.yaml": "sonarcloud",
    "SonarQube.Analysis.xml": "sonarcloud",
    "protractor.conf.js": "protractor",
    "protractor.conf.ts": "protractor",
    "protractor.conf.coffee": "protractor",
    "protractor.config.js": "protractor",
    "protractor.config.ts": "protractor",
    "fuse.js": "fusebox",
    "procfile": "heroku",
    "procfile.windows": "heroku",
    ".editorconfig": "editorconfig",
    ".editorconfig-checker.json": "editorconfig",
    ".ecrc": "editorconfig",
    ".bowerrc": "bower",
    "bower.json": "bower",
    ".eslintrc-md.js": "eslint",
    ".eslintrc-jsdoc.js": "eslint",
    ".eslintrc.base.json": "eslint",
    ".eslintignore": "eslint",
    ".eslintcache": "eslint",
    "code_of_conduct.md": "conduct",
    "code_of_conduct.txt": "conduct",
    "code_of_conduct": "conduct",
    ".watchmanconfig": "watchman",
    "aurelia.json": "aurelia",
    ".autorc": "auto",
    "auto.config.js": "auto",
    "auto.config.ts": "auto",
    "auto-config.json": "auto",
    "auto-config.yaml": "auto",
    "auto-config.yml": "auto",
    "auto-config.ts": "auto",
    "auto-config.js": "auto",
    "mocha.opts": "mocha",
    ".mocharc.yml": "mocha",
    ".mocharc.yaml": "mocha",
    ".mocharc.js": "mocha",
    ".mocharc.json": "mocha",
    ".mocharc.jsonc": "mocha",
    "jenkinsfile": "jenkins",
    "firebase.json": "firebase",
    ".firebaserc": "firebase",
    "firestore.rules": "firebase",
    "firestore.indexes.json": "firebase",
    "rollup.config.js": "rollup",
    "rollup.config.mjs": "rollup",
    "rollup.config.ts": "rollup",
    "rollup-config.js": "rollup",
    "rollup-config.mjs": "rollup",
    "rollup-config.ts": "rollup",
    "rollup.config.common.js": "rollup",
    "rollup.config.common.mjs": "rollup",
    "rollup.config.common.ts": "rollup",
    "rollup.config.base.js": "rollup",
    "rollup.config.base.mjs": "rollup",
    "rollup.config.base.ts": "rollup",
    "rollup.config.prod.js": "rollup",
    "rollup.config.prod.mjs": "rollup",
    "rollup.config.prod.ts": "rollup",
    "rollup.config.dev.js": "rollup",
    "rollup.config.dev.mjs": "rollup",
    "rollup.config.dev.ts": "rollup",
    "rollup.config.prod.vendor.js": "rollup",
    "rollup.config.prod.vendor.mjs": "rollup",
    "rollup.config.prod.vendor.ts": "rollup",
    ".hhconfig": "hack",
    "hardhat.config.js": "hardhat",
    "hardhat.config.ts": "hardhat",
    ".stylelintignore": "stylelint",
    ".stylelintcache": "stylelint",
    ".codeclimate.yml": "code-climate",
    ".prettierignore": "prettier",
    ".renovaterc": "renovate",
    ".renovaterc.json": "renovate",
    "renovate-config.json": "renovate",
    "renovate.json": "renovate",
    "renovate.json5": "renovate",
    "apollo.config.js": "apollo",
    "nodemon.json": "nodemon",
    "nodemon-debug.json": "nodemon",
    ".entity": "ngrx-entity",
    ".hintrc": "webhint",
    "browserslist": "browserlist",
    ".browserslistrc": "browserlist",
    ".snyk": "snyk",
    ".drone.yml": "drone",
    ".sequelizerc": "sequelize",
    "gatsby-config.js": "gatsby",
    "gatsby-config.mjs": "gatsby",
    "gatsby-config.ts": "gatsby",
    "gatsby-node.js": "gatsby",
    "gatsby-node.mjs": "gatsby",
    "gatsby-node.ts": "gatsby",
    "gatsby-browser.js": "gatsby",
    "gatsby-browser.tsx": "gatsby",
    "gatsby-ssr.js": "gatsby",
    "gatsby-ssr.tsx": "gatsby",
    ".wakatime-project": "wakatime",
    "circle.yml": "circleci",
    ".cfignore": "cloudfoundry",
    "gruntfile.js": "grunt",
    "gruntfile.ts": "grunt",
    "gruntfile.cjs": "grunt",
    "gruntfile.cts": "grunt",
    "gruntfile.coffee": "grunt",
    "gruntfile.babel.js": "grunt",
    "gruntfile.babel.ts": "grunt",
    "gruntfile.babel.coffee": "grunt",
    "jest.config.js": "jest",
    "jest.config.cjs": "jest",
    "jest.config.mjs": "jest",
    "jest.config.ts": "jest",
    "jest.config.cts": "jest",
    "jest.config.mts": "jest",
    "jest.config.json": "jest",
    "jest.e2e.config.js": "jest",
    "jest.e2e.config.cjs": "jest",
    "jest.e2e.config.mjs": "jest",
    "jest.e2e.config.ts": "jest",
    "jest.e2e.config.cts": "jest",
    "jest.e2e.config.mts": "jest",
    "jest.e2e.config.json": "jest",
    "jest.e2e.json": "jest",
    "jest-unit.config.js": "jest",
    "jest-e2e.config.js": "jest",
    "jest-e2e.config.cjs": "jest",
    "jest-e2e.config.mjs": "jest",
    "jest-e2e.config.ts": "jest",
    "jest-e2e.config.cts": "jest",
    "jest-e2e.config.mts": "jest",
    "jest-e2e.config.json": "jest",
    "jest-e2e.json": "jest",
    "jest-github-actions-reporter.js": "jest",
    "jest.setup.js": "jest",
    "jest.setup.ts": "jest",
    "jest.json": "jest",
    ".jestrc": "jest",
    ".jestrc.js": "jest",
    ".jestrc.json": "jest",
    "jest.teardown.js": "jest",
    "jest-preset.json": "jest",
    "jest-preset.js": "jest",
    "jest-preset.cjs": "jest",
    "jest-preset.mjs": "jest",
    "jest.preset.js": "jest",
    "jest.preset.mjs": "jest",
    "jest.preset.cjs": "jest",
    "jest.preset.json": "jest",
    "fastfile": "fastlane",
    "appfile": "fastlane",
    ".helmignore": "helm",
    "wallaby.js": "wallaby",
    "wallaby.conf.js": "wallaby",
    "stencil.config.js": "stencil",
    "stencil.config.ts": "stencil",
    "makefile": "makefile",
    "gnumakefile": "makefile",
    "kbuild": "makefile",
    "bitbucket-pipelines.yaml": "bitbucket",
    "bitbucket-pipelines.yml": "bitbucket",
    ".bazelignore": "bazel",
    ".bazelrc": "bazel",
    ".bazelversion": "bazel",
    ".gdignore": "godot-assets",
    "._sc_": "godot-assets",
    "_sc_": "godot-assets",
    "azure-pipelines.yml": "azure-pipelines",
    "azure-pipelines.yaml": "azure-pipelines",
    "azure-pipelines-main.yml": "azure-pipelines",
    "azure-pipelines-main.yaml": "azure-pipelines",
    "vagrantfile": "vagrant",
    "prisma.yml": "prisma",
    ".nycrc": "istanbul",
    ".nycrc.json": "istanbul",
    ".nycrc.yaml": "istanbul",
    ".nycrc.yml": "istanbul",
    "nyc.config.js": "istanbul",
    ".istanbul.yml": "istanbul",
    "tailwind.js": "tailwindcss",
    "tailwind.ts": "tailwindcss",
    "tailwind.config.js": "tailwindcss",
    "tailwind.config.cjs": "tailwindcss",
    "tailwind.config.mjs": "tailwindcss",
    "tailwind.config.ts": "tailwindcss",
    "tailwind.config.cts": "tailwindcss",
    "tailwind.config.mts": "tailwindcss",
    "buildkite.yml": "buildkite",
    "buildkite.yaml": "buildkite",
    "netlify.json": "netlify",
    "netlify.yml": "netlify",
    "netlify.yaml": "netlify",
    "netlify.toml": "netlify",
    "nest-cli.json": "nest",
    ".nest-cli.json": "nest",
    "nestconfig.json": "nest",
    ".nestconfig.json": "nest",
    "moon.yml": "moon",
    ".percy.yml": "percy",
    ".gitpod.yml": "gitpod",
    ".stackblitzrc": "stackblitz",
    "codeowners": "codeowners",
    "OWNERS": "codeowners",
    ".gcloudignore": "gcp",
    "amplify.yml": "amplify",
    "tiltfile": "tilt",
    "capacitor.config.json": "capacitor",
    "capacitor.config.ts": "capacitor",
    ".adonisrc.json": "adonis",
    "ace": "adonis",
    "meson.build": "meson",
    "meson_options.txt": "meson",
    ".czrc": "commitizen",
    ".cz.json": "commitizen",
    ".cz.toml": "commitizen",
    ".cz.yaml": "commitizen",
    ".cz.yml": "commitizen",
    "cz.json": "commitizen",
    "cz.toml": "commitizen",
    "cz.yaml": "commitizen",
    "cz.yml": "commitizen",
    ".commitlint.yaml": "commitlint",
    ".commitlint.yml": "commitlint",
    ".buckconfig": "buck",
    "nx.json": "nx",
    ".nxignore": "nx",
    "dune": "dune",
    "dune-project": "dune",
    "dune-workspace": "dune",
    "dune-workspace.dev": "dune",
    "roadmap.md": "roadmap",
    "roadmap.txt": "roadmap",
    "timeline.md": "roadmap",
    "timeline.txt": "roadmap",
    "milestones.md": "roadmap",
    "milestones.txt": "roadmap",
    "nuget.config": "nuget",
    ".nuspec": "nuget",
    "nuget.exe": "nuget",
    "stryker.conf.json": "stryker",
    "stryker.conf.js": "stryker",
    "stryker.conf.cjs": "stryker",
    "stryker.conf.mjs": "stryker",
    ".stryker.conf.json": "stryker",
    ".stryker.conf.js": "stryker",
    ".stryker.conf.cjs": "stryker",
    ".stryker.conf.mjs": "stryker",
    "stryker.config.json": "stryker",
    "stryker.config.js": "stryker",
    "stryker.config.mjs": "stryker",
    "stryker.config.cjs": "stryker",
    ".stryker.config.json": "stryker",
    ".stryker.config.js": "stryker",
    ".stryker.config.mjs": "stryker",
    ".stryker.config.cjs": "stryker",
    ".modernizrrc": "modernizr",
    ".modernizrrc.js": "modernizr",
    ".modernizrrc.json": "modernizr",
    ".slugignore": "slug",
    "stitches.config.js": "stitches",
    "stitches.config.ts": "stitches",
    "nginx.conf": "nginx",
    ".mcattributes": "minecraft",
    ".mcdefinitions": "minecraft",
    ".mcignore": "minecraft",
    ".replit": "replit",
    "duc.fbs": "duc",
    "snowpack.config.js": "snowpack",
    "snowpack.config.cjs": "snowpack",
    "snowpack.config.mjs": "snowpack",
    "snowpack.config.ts": "snowpack",
    "snowpack.config.cts": "snowpack",
    "snowpack.config.mts": "snowpack",
    "snowpack.deps.json": "snowpack",
    "snowpack.config.json": "snowpack",
    "quasar.conf.js": "quasar",
    "quasar.config.js": "quasar",
    "quasar.conf.ts": "quasar",
    "quasar.config.ts": "quasar",
    "quasar.config.cjs": "quasar",
    "dependabot.yml": "dependabot",
    "dependabot.yaml": "dependabot",
    "lerna.json": "lerna",
    "windi.config.js": "windicss",
    "windi.config.cjs": "windicss",
    "windi.config.ts": "windicss",
    "windi.config.cts": "windicss",
    "windi.config.json": "windicss",
    ".textlintrc": "textlint",
    ".textlintrc.js": "textlint",
    ".textlintrc.cjs": "textlint",
    ".textlintrc.json": "textlint",
    ".textlintrc.yml": "textlint",
    ".textlintrc.yaml": "textlint",
    ".textlintignore": "textlint",
    "vpkg.json": "vlang",
    "v.mod": "vlang",
    ".sentryclirc": "sentry",
    ".phpunit.result.cache": "phpunit",
    ".phpunit-watcher.yml": "phpunit",
    "phpunit.xml": "phpunit",
    "phpunit.xml.dist": "phpunit",
    "phpunit-watcher.yml": "phpunit",
    "phpunit-watcher.yml.dist": "phpunit",
    ".php_cs": "php-cs-fixer",
    ".php_cs.dist": "php-cs-fixer",
    ".php_cs.php": "php-cs-fixer",
    ".php_cs.dist.php": "php-cs-fixer",
    ".php-cs-fixer.php": "php-cs-fixer",
    ".php-cs-fixer.dist.php": "php-cs-fixer",
    "robots.txt": "robots",
    "tsconfig.json": "tsconfig",
    "tsconfig.app.json": "tsconfig",
    "tsconfig.editor.json": "tsconfig",
    "tsconfig.spec.json": "tsconfig",
    "tsconfig.base.json": "tsconfig",
    "tsconfig.build.json": "tsconfig",
    "tsconfig.eslint.json": "tsconfig",
    "tsconfig.lib.json": "tsconfig",
    "tsconfig.lib.prod.json": "tsconfig",
    "tsconfig.node.json": "tsconfig",
    "tsconfig.test.json": "tsconfig",
    "tsconfig.e2e.json": "tsconfig",
    "tsconfig.web.json": "tsconfig",
    "tsconfig.webworker.json": "tsconfig",
    "tsconfig.worker.json": "tsconfig",
    "tsconfig.config.json": "tsconfig",
    "tsconfig.vitest.json": "tsconfig",
    "tsconfig.cjs.json": "tsconfig",
    "tsconfig.esm.json": "tsconfig",
    "tsconfig.mjs.json": "tsconfig",
    "tsconfig.doc.json": "tsconfig",
    "tsconfig.paths.json": "tsconfig",
    "tsconfig.main.json": "tsconfig",
    "tsconfig.renderer.json": "tsconfig",
    "tsconfig.server.json": "tsconfig",
    "tsconfig.client.json": "tsconfig",
    "tsconfig.declaration.json": "tsconfig",
    "tauri.conf.json": "tauri",
    "tauri.config.json": "tauri",
    "tauri.linux.conf.json": "tauri",
    "tauri.windows.conf.json": "tauri",
    "tauri.macos.conf.json": "tauri",
    ".taurignore": "tauri",
    "jsconfig.json": "jsconfig",
    "maven.config": "maven",
    "jvm.config": "maven",
    "pom.xml": "maven",
    "serverless.yml": "serverless",
    "serverless.yaml": "serverless",
    "serverless.json": "serverless",
    "serverless.js": "serverless",
    "serverless.ts": "serverless",
    "supabase.js": "supabase",
    "supabase.ts": "supabase",
    "supabase.py": "supabase",
    ".ember-cli": "ember",
    ".ember-cli.js": "ember",
    "ember-cli-builds.js": "ember",
    "horusec-config.json": "horusec",
    "poetry.lock": "poetry",
    "pdm.lock": "pdm",
    "pdm.toml": "pdm",
    ".pdm-python": "pdm",
    ".parcelrc": "parcel",
    ".astylerc": "astyle",
    ".lighthouserc.js": "lighthouse",
    "lighthouserc.js": "lighthouse",
    ".lighthouserc.cjs": "lighthouse",
    "lighthouserc.cjs": "lighthouse",
    ".lighthouserc.json": "lighthouse",
    "lighthouserc.json": "lighthouse",
    ".lighthouserc.yml": "lighthouse",
    "lighthouserc.yml": "lighthouse",
    ".lighthouserc.yaml": "lighthouse",
    "lighthouserc.yaml": "lighthouse",
    "rome.json": "rome",
    "cypress.json": "cypress",
    "cypress.env.json": "cypress",
    "plopfile.js": "plop",
    "plopfile.cjs": "plop",
    "plopfile.mjs": "plop",
    "plopfile.ts": "plop",
    ".tobimake": "tobimake",
    "gleam.toml": "gleam",
    "pnpm-lock.yaml": "pnpm",
    "pnpm-workspace.yaml": "pnpm",
    ".pnpmfile.cjs": "pnpm",
    "gridsome.config.js": "gridsome",
    "gridsome.server.js": "gridsome",
    ".steadybit.yml": "steadybit",
    "steadybit.yml": "steadybit",
    ".steadybit.yaml": "steadybit",
    "steadybit.yaml": "steadybit",
    "Caddyfile": "caddy",
    "openapi.json": "openapi",
    "openapi.yml": "openapi",
    "openapi.yaml": "openapi",
    "swagger.json": "swagger",
    "swagger.yml": "swagger",
    "swagger.yaml": "swagger",
    "bun.lockb": "bun",
    "bunfig.toml": "bun",
    ".bun-version": "bun",
    "bun.lock": "bun",
    ".nano-staged.js": "nano-staged",
    "nano-staged.js": "nano-staged",
    ".nano-staged.cjs": "nano-staged",
    "nano-staged.cjs": "nano-staged",
    ".nano-staged.mjs": "nano-staged",
    "nano-staged.mjs": "nano-staged",
    ".nano-staged.json": "nano-staged",
    "nano-staged.json": "nano-staged",
    ".nanostagedrc": "nano-staged",
    "knip.json": "knip",
    "knip.jsonc": "knip",
    ".knip.json": "knip",
    ".knip.jsonc": "knip",
    "knip.ts": "knip",
    "knip.js": "knip",
    "knip.config.ts": "knip",
    "knip.config.js": "knip",
    "taskfile.yml": "taskfile",
    "taskfile.yaml": "taskfile",
    "taskfile.dist.yml": "taskfile",
    "taskfile.dist.yaml": "taskfile",
    ".taskrc.yml": "taskfile",
    ".taskrc.yaml": "taskfile",
    ".hg": "mercurial",
    ".hgignore": "mercurial",
    ".hgflow": "mercurial",
    ".hgtags": "mercurial",
    ".hgrc": "mercurial",
    "hgrc": "mercurial",
    "mercurial.ini": "mercurial",
    "deno.json": "deno",
    "deno.jsonc": "deno",
    "deno.lock": "deno",
    "plastic.branchexplorer": "plastic",
    "plastic.selector": "plastic",
    "plastic.wktree": "plastic",
    "plastic.workspace": "plastic",
    "plastic.workspaces": "plastic",
    "typst.toml": "typst",
    "uno.config.js": "unocss",
    "uno.config.mjs": "unocss",
    "uno.config.ts": "unocss",
    "uno.config.mts": "unocss",
    "unocss.config.js": "unocss",
    "unocss.config.mjs": "unocss",
    "unocss.config.ts": "unocss",
    "unocss.config.mts": "unocss",
    ".mincloudrc": "ifanr-cloud",
    "concourse.yml": "concourse",
    "werf.yaml": "werf",
    "werf.yml": "werf",
    "werf-giterminism.yaml": "werf",
    "werf-giterminism.yml": "werf",
    ".luaurc": "luau",
    "wally.toml": "wally",
    "biome.json": "biome",
    "biome.jsonc": "biome",
    "drizzle.config.ts": "drizzle",
    "drizzle.config.js": "drizzle",
    "drizzle.config.json": "drizzle",
    "garden.yml": "garden",
    "garden.yaml": "garden",
    "project.garden.yml": "garden",
    "project.garden.yaml": "garden",
    ".gardenignore": "garden",
    "PklProject": "pkl",
    "PklProject.deps.json": "pkl",
    "k8s.yml": "kubernetes",
    "k8s.yaml": "kubernetes",
    "kubernetes.yml": "kubernetes",
    "kubernetes.yaml": "kubernetes",
    ".k8s.yml": "kubernetes",
    ".k8s.yaml": "kubernetes",
    "phpstan.neon": "phpstan",
    "phpneon.neon.dist": "phpstan",
    "screwdriver.yaml": "screwdriver",
    "screwdriver.yml": "screwdriver",
    "snapcraft.yaml": "snapcraft",
    "snapcraft.yml": "snapcraft",
    ".devcontainer/devcontainer.json": "container",
    ".devcontainer/devcontainer-lock.json": "container",
    "kcl.mod": "kcl",
    "kcl.yaml": "kcl",
    "kcl.yml": "kcl",
    ".clangd": "clangd",
    ".markdownlint.json": "markdownlint",
    ".markdownlint.jsonc": "markdownlint",
    ".markdownlint.yaml": "markdownlint",
    ".markdownlint.yml": "markdownlint",
    ".markdownlint-cli2.jsonc": "markdownlint",
    ".markdownlint-cli2.yaml": "markdownlint",
    ".markdownlint-cli2.cjs": "markdownlint",
    ".markdownlint-cli2.mjs": "markdownlint",
    ".markdownlintignore": "markdownlint",
    ".deepsource.toml": "deepsource",
    "jsr.json": "jsr",
    "jsr.jsonc": "jsr",
    ".coderabbit.yml": "coderabbit-ai",
    ".coderabbit.yaml": "coderabbit-ai",
    ".aiexclude": "gemini-ai",
    ".tazerc": "taze",
    ".tazerc.json": "taze",
    ".lefthook-local.json": "lefthook",
    ".lefthook-local.toml": "lefthook",
    ".lefthook-local.yaml": "lefthook",
    ".lefthook-local.yml": "lefthook",
    ".lefthook.json": "lefthook",
    ".lefthook.toml": "lefthook",
    ".lefthook.yaml": "lefthook",
    ".lefthook.yml": "lefthook",
    ".lefthookrc": "lefthook",
    "lefthook-local.json": "lefthook",
    "lefthook-local.toml": "lefthook",
    "lefthook-local.yaml": "lefthook",
    "lefthook-local.yml": "lefthook",
    "lefthook.json": "lefthook",
    "lefthook.toml": "lefthook",
    "lefthook.yaml": "lefthook",
    "lefthook.yml": "lefthook",
    "lefthookrc": "lefthook",
    ".github/labeler.yml": "label",
    ".github/labeler.yaml": "label",
    ".github/copilot-instructions.md": "copilot",
    ".pre-commit-config.yaml": "pre-commit",
    ".pre-commit-hooks.yaml": "pre-commit",
    "install": "installation",
    "installation": "installation",
    ".github/FUNDING.yml": "github-sponsors",
    "fabric.mod.json": "minecraft-fabric",
    "hosts": "hosts",
    "citation.cff": "citation",
    "xmake.lua": "xmake",
    "xmake": "xmake",
    "wrangler.toml": "wrangler",
    "wrangler.json": "wrangler",
    "wrangler.jsonc": "wrangler",
    ".clinerules": "cline",
    ".packshiprc": "packship",
    ".packshiprc.json": "packship",
    ".packshiprc.js": "packship",
    ".packshiprc.ts": "packship",
    "packship.config.js": "packship",
    "packship.config.ts": "packship",
    "packship.config.mjs": "packship",
    "packship.config.mts": "packship",
    "packship.config.json": "packship"
}